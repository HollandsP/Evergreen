#!/bin/bash

echo "üöÄ Starting AI Content Pipeline (Simple Mode)"
echo "==========================================="

# Clean up
echo "üßπ Cleaning up..."
docker-compose -f docker-compose.simple.yml down 2>/dev/null

# Build if needed
echo "üî® Building Docker image..."
docker-compose -f docker-compose.simple.yml build

# Start services
echo "üê≥ Starting services..."
docker-compose -f docker-compose.simple.yml up -d

# Wait for services
echo "‚è≥ Waiting for services to start..."
sleep 15

# Show status
echo ""
echo "üìä Service Status:"
docker-compose -f docker-compose.simple.yml ps

echo ""
echo "üéØ Progress Monitoring UI:"
echo ""
echo "üì∫ Flower (Celery Monitor): http://localhost:5556"
echo "   ‚Ä¢ Real-time task progress bars"
echo "   ‚Ä¢ Worker status and health"
echo "   ‚Ä¢ Task success/failure tracking"
echo "   ‚Ä¢ Username: admin, Password: admin"
echo ""
echo "üìö API Docs: http://localhost:8000/docs"
echo "   ‚Ä¢ Test endpoints interactively"
echo "   ‚Ä¢ Submit video generation requests"
echo ""

# Quick health check
echo "üè• Testing services..."
echo -n "   Database: "
docker exec evergreen-db pg_isready -U pipeline -d pipeline 2>/dev/null && echo "‚úÖ Ready" || echo "‚ö†Ô∏è  Starting..."

echo -n "   Redis: "
docker exec evergreen-redis redis-cli ping 2>/dev/null | grep -q PONG && echo "‚úÖ Ready" || echo "‚ö†Ô∏è  Starting..."

echo -n "   API: "
curl -s http://localhost:8000/health >/dev/null 2>&1 && echo "‚úÖ Ready" || echo "‚ö†Ô∏è  Starting..."

echo ""
echo "‚ú® Services are starting!"
echo ""
echo "Next steps:"
echo "1. Open http://localhost:5556 to watch progress"
echo "2. Run: python3 test_services.py"
echo "3. Run: python3 generate_video.py"
echo ""