# Evergreen AI Video Pipeline - Environment Configuration Template
# Copy this file to .env and fill in your actual values

# ============================================================================
# APPLICATION SETTINGS
# ============================================================================
APP_ENV=production
DEBUG=false
SECRET_KEY=your-super-secret-key-change-this-in-production

# ============================================================================
# DATABASE CONFIGURATION
# ============================================================================
DATABASE_URL=postgresql://pipeline:your-db-password@db:5432/pipeline
DB_PASSWORD=your-secure-db-password
DB_PORT=5432

# ============================================================================
# REDIS CONFIGURATION
# ============================================================================
REDIS_URL=redis://redis:6379
REDIS_PORT=6379

# ============================================================================
# CELERY CONFIGURATION
# ============================================================================
CELERY_BROKER_URL=redis://redis:6379/0
CELERY_RESULT_BACKEND=redis://redis:6379/1

# ============================================================================
# AI SERVICE API KEYS
# ============================================================================

# OpenAI API Key (Required for GPT models and DALL-E image generation)
OPENAI_API_KEY=sk-your-openai-api-key-here

# ElevenLabs API Key (Required for voice synthesis)
ELEVENLABS_API_KEY=your-elevenlabs-api-key-here

# RunwayML API Key (Required for video generation)
RUNWAY_API_KEY=your-runway-api-key-here

# YouTube Data API Key (Optional - for upload integration)
YOUTUBE_API_KEY=your-youtube-api-key-here

# ============================================================================
# AWS S3 CONFIGURATION (For media storage)
# ============================================================================
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key
AWS_REGION=us-east-1
S3_BUCKET=evergreen-pipeline-media

# ============================================================================
# NEXTAUTH CONFIGURATION (For web authentication)
# ============================================================================
NEXTAUTH_SECRET=your-nextauth-secret-key-change-in-production
NEXTAUTH_URL=https://your-domain.com

# ============================================================================
# MONITORING & OBSERVABILITY
# ============================================================================

# Flower (Celery monitoring) credentials
FLOWER_USER=admin
FLOWER_PASSWORD=secure-flower-password
FLOWER_PORT=5555

# Sentry DSN (Optional - for error tracking)
SENTRY_DSN=your-sentry-dsn-here

# ============================================================================
# SECURITY CONFIGURATION
# ============================================================================

# SSL Certificate paths (for NGINX)
SSL_CERT_PATH=/etc/nginx/ssl/cert.pem
SSL_KEY_PATH=/etc/nginx/ssl/key.pem

# Allowed hosts (comma-separated)
ALLOWED_HOSTS=localhost,127.0.0.1,your-domain.com

# CORS origins (comma-separated)
CORS_ORIGINS=https://your-domain.com,https://www.your-domain.com

# ============================================================================
# PERFORMANCE TUNING
# ============================================================================

# Worker configuration
CELERY_WORKER_CONCURRENCY=4
CELERY_WORKER_PREFETCH_MULTIPLIER=2

# Upload limits
MAX_UPLOAD_SIZE=500MB
MAX_CONCURRENT_UPLOADS=5

# Cache TTL (seconds)
CACHE_TTL=3600

# ============================================================================
# DEVELOPMENT SETTINGS (Not used in production)
# ============================================================================

# Development database URL
DEV_DATABASE_URL=postgresql://pipeline:pipeline@localhost:5432/pipeline_dev

# Test database URL
TEST_DATABASE_URL=postgresql://test_user:test_password@localhost:5433/evergreen_test

# ============================================================================
# PRODUCTION DEPLOYMENT
# ============================================================================

# Docker image tags
IMAGE_TAG=latest
REGISTRY_URL=ghcr.io/your-username/evergreen

# Deployment environment
DEPLOY_ENV=production

# Health check URLs
HEALTH_CHECK_URL=https://your-domain.com/api/health
EXTERNAL_HEALTH_CHECK=true

# Backup configuration
BACKUP_ENABLED=true
BACKUP_S3_BUCKET=evergreen-backups
BACKUP_RETENTION_DAYS=30

# ============================================================================
# FEATURE FLAGS
# ============================================================================

# Enable/disable specific features
ENABLE_YOUTUBE_UPLOAD=true
ENABLE_AI_EDITOR=true
ENABLE_PERFORMANCE_MONITORING=true
ENABLE_COST_TRACKING=true

# Rate limiting
API_RATE_LIMIT=1000
UPLOAD_RATE_LIMIT=100

# ============================================================================
# NOTES
# ============================================================================
# 
# 1. SECURITY: Never commit the actual .env file to version control
# 2. API KEYS: All AI service API keys are required for full functionality
# 3. AWS S3: Required for media storage and exports
# 4. SSL: In production, ensure you have valid SSL certificates
# 5. MONITORING: Configure Sentry for production error tracking
# 6. BACKUPS: Enable automated database backups for production
# 7. SCALING: Adjust worker concurrency based on your server resources
#
# For detailed setup instructions, see: docs/DEPLOYMENT.md