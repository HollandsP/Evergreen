# Evergreen AI Content Pipeline Environment Variables
# Copy this file to .env and fill in your values

# Application Settings
APP_ENV=development  # development, staging, production
DEBUG=true           # Set to false in production

# Database Configuration
DATABASE_URL=postgresql://pipeline:pipeline@localhost:5432/pipeline
DB_PASSWORD=pipeline  # Change in production
DB_PORT=5432         # External port (can be changed to avoid conflicts)

# Redis Configuration
REDIS_URL=redis://localhost:6379
REDIS_PORT=6379      # External port (can be changed to avoid conflicts)

# Celery Configuration
CELERY_BROKER_URL=redis://localhost:6379/0
CELERY_RESULT_BACKEND=redis://localhost:6379/1

# API Keys (Required)
ELEVENLABS_API_KEY=your_elevenlabs_key_here
RUNWAY_API_KEY=your_runway_key_here
OPENAI_API_KEY=your_openai_key_here

# AWS Configuration (Required for media storage)
AWS_ACCESS_KEY_ID=your_aws_access_key
AWS_SECRET_ACCESS_KEY=your_aws_secret_key
AWS_REGION=us-east-1
S3_BUCKET=content-pipeline-media

# Google Cloud (Optional - for TTS fallback)
GOOGLE_APPLICATION_CREDENTIALS=path/to/service-account.json

# Flower Monitoring
FLOWER_USER=admin
FLOWER_PASSWORD=admin  # Change in production
FLOWER_PORT=5555       # External port
FLOWER_BASIC_AUTH=admin:admin

# Docker Registry (Production)
DOCKER_REGISTRY=docker.io
DOCKER_IMAGE=evergreen-pipeline
VERSION=latest

# RabbitMQ Configuration (Alternative Celery setup)
RABBITMQ_USER=admin
RABBITMQ_PASSWORD=password  # Change in production
RABBITMQ_URL=amqp://admin:password@localhost:5672/evergreen
